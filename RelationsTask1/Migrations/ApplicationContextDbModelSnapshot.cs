// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RelationsTask1.Data;

#nullable disable

namespace RelationsTask1.Migrations
{
    [DbContext(typeof(ApplicationContextDb))]
    partial class ApplicationContextDbModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RelationsTask1.models.Blog", b =>
                {
                    b.Property<int>("BlogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BlogId"));

                    b.Property<string>("BlogDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BlogTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("BlogId");

                    b.HasIndex("UserId");

                    b.ToTable("Blogs");

                    b.HasData(
                        new
                        {
                            BlogId = 1,
                            BlogDescription = "The Task1 Description",
                            BlogTitle = "Task1",
                            UserId = 1
                        },
                        new
                        {
                            BlogId = 2,
                            BlogDescription = "The Task2 Description",
                            BlogTitle = "Task2",
                            UserId = 1
                        },
                        new
                        {
                            BlogId = 3,
                            BlogDescription = "The Task3 Description",
                            BlogTitle = "Task3",
                            UserId = 1
                        },
                        new
                        {
                            BlogId = 4,
                            BlogDescription = "The Task4 Description",
                            BlogTitle = "Task4",
                            UserId = 2
                        },
                        new
                        {
                            BlogId = 5,
                            BlogDescription = "The Task5 Description",
                            BlogTitle = "Task5",
                            UserId = 2
                        });
                });

            modelBuilder.Entity("RelationsTask1.models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Email = "User1@gmial.com",
                            Password = "Password1",
                            UserName = "User1"
                        },
                        new
                        {
                            UserId = 2,
                            Email = "User2@gmial.com",
                            Password = "Password2",
                            UserName = "User2"
                        });
                });

            modelBuilder.Entity("RelationsTask1.models.Blog", b =>
                {
                    b.HasOne("RelationsTask1.models.User", "User")
                        .WithMany("Blogs")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("RelationsTask1.models.User", b =>
                {
                    b.Navigation("Blogs");
                });
#pragma warning restore 612, 618
        }
    }
}
